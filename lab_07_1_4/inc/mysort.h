#ifndef MYSORT_H
#define MYSORT_H

#include <stdio.h>

/**
 * \brief Бинарный поиск в отсортированном массиве.
 *
 * Функция осуществляет бинарный поиск в отсортированном массиве, начиная с pbeg и заканчивая pi,
 * используя сравнение элементов с помощью функции cmp. Возвращает указатель на элемент за ключом.
 *
 * \param pbeg [in] - указатель на начало массива
 * \param pi [in] - указатель на конец массива
 * \param size [in] - размер каждого элемента в байтах
 * \param key [in] - ключ поиска
 * \param cmp [in] - указатель на функцию сравнения элементов
 * 
 * \return Указатель на найденный элемент.
 */
void *bin_search(void *pbeg, void *pi, size_t size, void *key, int (*cmp)(const void *, const void *));

/**
 * \brief Функция сравнения для сортировки целых чисел.
 *
 * Эта функция сравнивает два целых числа, представленных указателями l и r.
 *
 * \param l [in] - указатель на левое целое число
 * \param r [in] - указатель на правое целое число
 * 
 * \return Результат сравнения:
 *         - Отрицательное число, если l < r
 *         - 0, если l == r
 *         - Положительное число, если l > r
 */
int int_cmp(const void *l, const void *r);

/**
 * \brief Сортирует массив, используя алгоритм сортировки вставками c бинарным поиском.
 *
 * Эта функция сортирует массив, заданный указателем ptr, содержащий count элементов, каждый размера size.
 * Сравнение элементов осуществляется с использованием функции-компаратора cmp.
 * \note Корректность массива не проверяется
 *
 * \param ptr [in/out] - указатель на начало массива
 * \param count [in] - количество элементов в массиве
 * \param size [in] - размер каждого элемента в байтах
 * \param cmp [in] - указатель на функцию-компаратор для сравнения элементов
 */
void mysort(void *ptr, size_t count, size_t size, int (*cmp)(const void *, const void *));

#endif
