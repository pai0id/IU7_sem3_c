#ifndef LIB_ARR_H
#define LIB_ARR_H

#include <stdio.h>
#include "liberr.h"

/**
 * \brief Подсчет количества элементов в файле.
 *
 * Функция считает количество целочисленных элементов в файле f и возвращает это количество через параметр cnt.
 * Если произошла ошибка ввода-вывода, функция возвращает LIB_ERR_IO.
 *
 * \param f [in, out] - указатель на файл, из которого происходит чтение
 * \param cnt [out] - указатель, в который будет записано количество элементов
 * 
 * \return Код ошибки:
 *         - LIB_OK, если количество элементов успешно подсчитано
 *         - LIB_ERR_IO, если произошла ошибка ввода-вывода
 */
int cnt_elements(FILE *f, int *cnt);

/**
 * \brief Чтение массива целых чисел из файла.
 *
 * Функция считывает целочисленные значения из файла f и сохраняет их в динамически выделенный массив.
 * Начальный адрес массива сохраняется в pb, конечный адрес - в pe.
 *
 * \param f [in, out] - указатель на файл, из которого происходит чтение
 * \param pb [out] - указатель на указатель начала массива
 * \param pe [out] - указатель на указатель конца массива
 * \return Код ошибки:
 *         - LIB_OK, если массив успешно считан
 *         - LIB_ERR_IO, если произошла ошибка ввода-вывода
 */
int read_arr(FILE *f, int **pb, int **pe);

/**
 * \brief Чтение массива целых чисел из файла.
 *
 * Функция считывает целочисленные значения из файла f и сохраняет их в динамически выделенный массив.
 * Начальный адрес массива сохраняется в pb, конечный адрес - в pe.
 *
 * \param f [in, out] - указатель на файл, из которого происходит чтение
 * \param pb [out] - указатель на указатель начала массива
 * \param pe [out] - указатель на указатель конца массива
 * 
 * \return Код ошибки:
 *         - LIB_OK, если массив успешно считан
 *         - LIB_ERR_FILE_EMPTY, если файл пуст
 *         - LIB_ERR_MEM, если не удалось выделить память для массива
 */
int get_arr(FILE *f, int **pb, int **pe);

/**
 * \brief Выделяет память под массив и задает pb и pe.
 *
 * \param pb [out] - указатель на указатель начала массива
 * \param pe [out] - указатель на указатель конца массива
 * \param size [in] - размер массива
 * 
 * \return Код ошибки:
 *         - LIB_OK, если массив успешно создан
 *         - LIB_ERR_MEM, если не удалось выделить память для массива
 */
int alloc_arr(int **pb, int **pe, size_t size);

/**
 * \brief Освобождение массива целых чисел.
 *
 * \param pb [out] - указатель на указатель начала массива
 * \param pe [out] - указатель на указатель конца массива
 */
void free_arr(int **pb, int **pe);

/**
 * \brief Печать массива целых чисел в файл.
 *
 * Функция выводит целочисленные значения из массива, начиная с pb и заканчивая pe, в файл f.
 *
 * \param f [in, out] - указатель на файл, в который будет произведена запись
 * \param pb [in] - указатель на начало массива
 * \param pe [in] - указатель на конец массива
 */
void print_arr(FILE *f, const int *pb, const int *pe);

#endif
