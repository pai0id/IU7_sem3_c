#ifndef __MY_SNPRINTF_H__
#define __MY_SNPRINTF_H__

/**
 * \brief Вставляет символ в начало массива фиксированной длинны.
 *
 * Вставляет символ c в начало фиксированного массива arr, с учетом его размера size.
 * При этом последний не вошедший в размер элемент теряется.
 *
 * \param c [in] - Символ для вставки в начало массива.
 * \param arr [in/out] - Фиксированный массив.
 * \param size [in] - Размер массива.
 */
void insert_beg_fixed_size(char c, char *arr, size_t size);

/**
 * \brief Преобразует число в восьмеричную систему счисления и записывает результат в строку.
 *
 * Преобразует число num в восьмеричную систему счисления и записывает результат в строку res.
 * Размер строки задается параметром size. Если размер строки меньше нужного, записываются только size - 1 символов.
 *
 * \param num [in] - Число для преобразования.
 * \param res [out] - Строка для записи результата.
 * \param size [in] - Размер строки для записи результата.
 * \return Количество символов в преобразованном числе (даже если не все они были записаны).
 */
int snprint_to_octal(unsigned long long int num, char *res, size_t size);

/**
 * \brief Копирует строку из src в dest с учетом размера size.
 *
 * Если размер меньше нужного, записываются только size - 1 символов.
 *
 * \param dest [out] - Cтрока назначения.
 * \param src [in] - Исходная строка.
 * \param size [in] - Размер строки назначения.
 * \return Количество символов в строке (даже если не все они были записаны).
 */
int ncpy_str(char *dest, const char *src, size_t size);

/**
 * \brief Реализация функции my_snprintf.
 *
 * Функция my_snprintf форматирует и выводит данные в строку str по аналогии с
 * функцией snprintf. Поддерживаются только спецификаторы %s и %llo.
 * Память под строку str должна быть выделена заранее.
 *
 * \param str [out] - Буфер для сохранения отформатированных данных.
 * \param size [in] - Размер буфера str в байтах.
 * \param format [in] - Строка формата с поддерживаемыми спецификаторами.
 * \param ... - Дополнительные аргументы для форматирования.
 * \return Количество записанных символов (не включая завершающий нуль) в случае
 *         успешного выполнения. Возвращается -1 в случае ошибки.
 */
int my_snprintf(char *str, size_t size, const char *format, ...);

#endif
