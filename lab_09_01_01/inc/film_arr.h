/*!
    \file
    \brief Заголовочный файл с модулями для работы с массивами структур
*/

#ifndef FILM_ARR_H
#define FILM_ARR_H

#include <stdio.h>
#include "film.h"
#include "err.h"

/**
 * \brief Подсчет количества фильмов в файле.
 *
 * Функция считывает фильмы из файла, пока это возможно, и подсчитывает их количество.
 * В случае ошибки при чтении возвращает соответствующий код ошибки.
 *
 * \param f [in/out] - указатель на FILE, представляющий файл с фильмами.
 * \param n [out] - указатель на переменную, в которую будет записано количество фильмов.
 * \return Код ошибки (OK в случае успеха).
 */
int fa_count(FILE *f, size_t *n);

/**
 * \brief Вставляет фильм в массив структур по указанному индексу.
 *
 * \param film_arr [in/out] - массив структур, в который будет вставлен фильм
 * \param pn [in/out] - указатель на счетчик количества элементов в массиве
 * \param film [in] - указатель на фильм, который нужно вставить
 * \param index [in] - индекс, по которому будет вставлен фильм
 * 
 * \note Предполагается, что в массиве достаточно свободного места для вставки
 * 
 * \return Код ошибки:
 *         - OK, если фильм успешно вставлен
 *         - ERR_RANGE, если index больше, чем текущее количество элементов в массиве
 */
int film_insert(struct film_t *film_arr, size_t *pn, struct film_t *film, size_t index);

/**
 * \brief Нахождение позиции для вставки элемента в отсортированный массив.
 *
 * Функция находит позицию для вставки элемента curr в отсортированный массив film_arr сравнивая 
 * с помощью функции сравнения cmp. Возвращает индекс позиции для вставки.
 *
 * \param n [in] - количество элементов в массиве film_arr.
 * \param film_arr [in] - указатель на массив структур film_t.
 * \param curr [in] - указатель на структуру film_t, которую нужно вставить.
 * \param cmp [in] - функция сравнения для определения порядка.
 * \return Позиция для вставки элемента.
 */
size_t find_pos(size_t n, struct film_t *film_arr, struct film_t *curr, cmp_t cmp);

/**
 * \brief Освобождение памяти, выделенной под содержимое массива структур film_t.
 *
 * \param film_arr [in] - указатель на массив структур film_t.
 * \param n [in] - количество элементов в массиве film_arr.
 */
void fa_free(struct film_t *film_arr, size_t n);

/**
 * \brief Создание и заполнение массива структур film_t из файла с упорядочиванием по полю field.
 *
 * \param f [in/out] - указатель на файл.
 * \param film_arr [out] - указатель на указатель на массив структур film_t (выходной параметр).
 * \param n_films [out] - указатель на переменную, в которую будет записано количество элементов.
 * \param cmp [in] - указатель на функцию сравнения элементов структур film_t.
 * 
 * \return Код ошибки.
 */
int fa_create(FILE *f, struct film_t **film_arr, size_t *n_films, cmp_t cmp);

/**
 * \brief Считывает фильмы из файла и сохраняет их в массиве,
 *  сразу упорядочивая по заданному полю.
 *
 * \param f [in/out] - указатель на файл, из которого будет считываться информация о фильмах
 * \param film_arr [out] - указатель на массив структур, в который будут сохранены фильмы
 * \param n_max [in] - максимально допустимое количество элементов в массиве film_arr
 * \param pn [out] - указатель на счетчик количества считанных и сохраненных фильмов
 * \param cmp [in] - указатель на необходимый компаратор
 * 
 * \note Предполагается, что указатель на компаратор корректен
 * \note Устойчивость сортировки - при равенстве полей сохраняется исходный порядок
 * 
 * \return Код ошибки:
 *         - OK, если фильмы успешно считаны и сохранены
 *         - ERR_IO, если произошла ошибка ввода-вывода
 *         - ERR_RANGE, если длина строки не соответствует ожидаемой
 */
int fa_read_sorted_by_field(FILE *f, struct film_t *film_arr, size_t n, cmp_t cmp);

/**
 * \brief Выводит информацию о фильмах из массива в указанный файл.
 *
 * \param f [in/out] - указатель на файл, в который будет выведена информация о фильмах
 * \param film_arr [in] - указатель на массив структур, содержащий информацию о фильмах
 * \param n [in] - количество фильмов для вывода
 */
void fa_print(FILE *f, const struct film_t *film_arr, size_t n);

/**
 * \brief Выполняет бинарный поиск в отсортированном массиве по заданному ключу
 *
 * \param film_arr [in] - указатель на отсортированный массив фильмов
 * \param film [out] - найденный фильм
 * \param size [in] - размер массива film_arr
 * \param key [in] - структура с заполненным полем ключа
 * \param cmp [in] - указатель на функцию-компаратор для сравнения элементов
 * 
 * \return Код ошибки:
 *         - OK, если элемент найден и выведен
 *         - ERR_NOT_FOUND, если элемент не найден
 */
int bin_search_by_field(const struct film_t *film_arr, struct film_t *film, size_t size, const struct film_t *key, cmp_t cmp);

#endif
